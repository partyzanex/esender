// Code generated by protoc-gen-go. DO NOT EDIT.
// source: email.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MimeType int32

const (
	MimeType_text MimeType = 0
	MimeType_html MimeType = 1
)

var MimeType_name = map[int32]string{
	0: "text",
	1: "html",
}
var MimeType_value = map[string]int32{
	"text": 0,
	"html": 1,
}

func (x MimeType) String() string {
	return proto.EnumName(MimeType_name, int32(x))
}
func (MimeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_email_473ab52288cf1a2d, []int{0}
}

type EmailStatus int32

const (
	EmailStatus_created EmailStatus = 0
	EmailStatus_sent    EmailStatus = 1
	EmailStatus_error   EmailStatus = 2
)

var EmailStatus_name = map[int32]string{
	0: "created",
	1: "sent",
	2: "error",
}
var EmailStatus_value = map[string]int32{
	"created": 0,
	"sent":    1,
	"error":   2,
}

func (x EmailStatus) String() string {
	return proto.EnumName(EmailStatus_name, int32(x))
}
func (EmailStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_email_473ab52288cf1a2d, []int{1}
}

type Message struct {
	ID                   int64       `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Recipients           []*Address  `protobuf:"bytes,2,rep,name=Recipients,proto3" json:"Recipients,omitempty"`
	CC                   []*Address  `protobuf:"bytes,3,rep,name=CC,proto3" json:"CC,omitempty"`
	BCC                  []*Address  `protobuf:"bytes,4,rep,name=BCC,proto3" json:"BCC,omitempty"`
	Sender               *Address    `protobuf:"bytes,5,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Subject              string      `protobuf:"bytes,6,opt,name=Subject,proto3" json:"Subject,omitempty"`
	Body                 string      `protobuf:"bytes,7,opt,name=Body,proto3" json:"Body,omitempty"`
	MimeType             MimeType    `protobuf:"varint,8,opt,name=MimeType,proto3,enum=pb.MimeType" json:"MimeType,omitempty"`
	Status               EmailStatus `protobuf:"varint,9,opt,name=Status,proto3,enum=pb.EmailStatus" json:"Status,omitempty"`
	Error                string      `protobuf:"bytes,10,opt,name=Error,proto3" json:"Error,omitempty"`
	DTCreated            int64       `protobuf:"varint,11,opt,name=DTCreated,proto3" json:"DTCreated,omitempty"`
	DTUpdated            int64       `protobuf:"varint,12,opt,name=DTUpdated,proto3" json:"DTUpdated,omitempty"`
	DTSent               int64       `protobuf:"varint,13,opt,name=DTSent,proto3" json:"DTSent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_email_473ab52288cf1a2d, []int{0}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (dst *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(dst, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Message) GetRecipients() []*Address {
	if m != nil {
		return m.Recipients
	}
	return nil
}

func (m *Message) GetCC() []*Address {
	if m != nil {
		return m.CC
	}
	return nil
}

func (m *Message) GetBCC() []*Address {
	if m != nil {
		return m.BCC
	}
	return nil
}

func (m *Message) GetSender() *Address {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *Message) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *Message) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Message) GetMimeType() MimeType {
	if m != nil {
		return m.MimeType
	}
	return MimeType_text
}

func (m *Message) GetStatus() EmailStatus {
	if m != nil {
		return m.Status
	}
	return EmailStatus_created
}

func (m *Message) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *Message) GetDTCreated() int64 {
	if m != nil {
		return m.DTCreated
	}
	return 0
}

func (m *Message) GetDTUpdated() int64 {
	if m != nil {
		return m.DTUpdated
	}
	return 0
}

func (m *Message) GetDTSent() int64 {
	if m != nil {
		return m.DTSent
	}
	return 0
}

type SearchRequest struct {
	Recipient            string      `protobuf:"bytes,1,opt,name=Recipient,proto3" json:"Recipient,omitempty"`
	Sender               string      `protobuf:"bytes,2,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Status               EmailStatus `protobuf:"varint,3,opt,name=Status,proto3,enum=pb.EmailStatus" json:"Status,omitempty"`
	Since                int64       `protobuf:"varint,4,opt,name=Since,proto3" json:"Since,omitempty"`
	Till                 int64       `protobuf:"varint,5,opt,name=Till,proto3" json:"Till,omitempty"`
	Limit                int64       `protobuf:"varint,6,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset               int64       `protobuf:"varint,7,opt,name=Offset,proto3" json:"Offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SearchRequest) Reset()         { *m = SearchRequest{} }
func (m *SearchRequest) String() string { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()    {}
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_email_473ab52288cf1a2d, []int{1}
}
func (m *SearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchRequest.Unmarshal(m, b)
}
func (m *SearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchRequest.Marshal(b, m, deterministic)
}
func (dst *SearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchRequest.Merge(dst, src)
}
func (m *SearchRequest) XXX_Size() int {
	return xxx_messageInfo_SearchRequest.Size(m)
}
func (m *SearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchRequest proto.InternalMessageInfo

func (m *SearchRequest) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *SearchRequest) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *SearchRequest) GetStatus() EmailStatus {
	if m != nil {
		return m.Status
	}
	return EmailStatus_created
}

func (m *SearchRequest) GetSince() int64 {
	if m != nil {
		return m.Since
	}
	return 0
}

func (m *SearchRequest) GetTill() int64 {
	if m != nil {
		return m.Till
	}
	return 0
}

func (m *SearchRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SearchRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type SearchResponse struct {
	Emails               []*Message `protobuf:"bytes,1,rep,name=Emails,proto3" json:"Emails,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SearchResponse) Reset()         { *m = SearchResponse{} }
func (m *SearchResponse) String() string { return proto.CompactTextString(m) }
func (*SearchResponse) ProtoMessage()    {}
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_email_473ab52288cf1a2d, []int{2}
}
func (m *SearchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResponse.Unmarshal(m, b)
}
func (m *SearchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResponse.Marshal(b, m, deterministic)
}
func (dst *SearchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResponse.Merge(dst, src)
}
func (m *SearchResponse) XXX_Size() int {
	return xxx_messageInfo_SearchResponse.Size(m)
}
func (m *SearchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResponse proto.InternalMessageInfo

func (m *SearchResponse) GetEmails() []*Message {
	if m != nil {
		return m.Emails
	}
	return nil
}

type Address struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_email_473ab52288cf1a2d, []int{3}
}
func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (dst *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(dst, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Address) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type SendResult struct {
	Success              bool     `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendResult) Reset()         { *m = SendResult{} }
func (m *SendResult) String() string { return proto.CompactTextString(m) }
func (*SendResult) ProtoMessage()    {}
func (*SendResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_email_473ab52288cf1a2d, []int{4}
}
func (m *SendResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendResult.Unmarshal(m, b)
}
func (m *SendResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendResult.Marshal(b, m, deterministic)
}
func (dst *SendResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendResult.Merge(dst, src)
}
func (m *SendResult) XXX_Size() int {
	return xxx_messageInfo_SendResult.Size(m)
}
func (m *SendResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SendResult.DiscardUnknown(m)
}

var xxx_messageInfo_SendResult proto.InternalMessageInfo

func (m *SendResult) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*Message)(nil), "pb.Message")
	proto.RegisterType((*SearchRequest)(nil), "pb.SearchRequest")
	proto.RegisterType((*SearchResponse)(nil), "pb.SearchResponse")
	proto.RegisterType((*Address)(nil), "pb.Address")
	proto.RegisterType((*SendResult)(nil), "pb.SendResult")
	proto.RegisterEnum("pb.MimeType", MimeType_name, MimeType_value)
	proto.RegisterEnum("pb.EmailStatus", EmailStatus_name, EmailStatus_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EmailClient is the client API for Email service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EmailClient interface {
	Create(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	Update(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	Get(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	Send(ctx context.Context, in *Message, opts ...grpc.CallOption) (*SendResult, error)
}

type emailClient struct {
	cc *grpc.ClientConn
}

func NewEmailClient(cc *grpc.ClientConn) EmailClient {
	return &emailClient{cc}
}

func (c *emailClient) Create(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/pb.Email/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *emailClient) Update(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/pb.Email/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *emailClient) Get(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/pb.Email/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *emailClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/pb.Email/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *emailClient) Send(ctx context.Context, in *Message, opts ...grpc.CallOption) (*SendResult, error) {
	out := new(SendResult)
	err := c.cc.Invoke(ctx, "/pb.Email/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EmailServer is the server API for Email service.
type EmailServer interface {
	Create(context.Context, *Message) (*Message, error)
	Update(context.Context, *Message) (*Message, error)
	Get(context.Context, *Message) (*Message, error)
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
	Send(context.Context, *Message) (*SendResult, error)
}

func RegisterEmailServer(s *grpc.Server, srv EmailServer) {
	s.RegisterService(&_Email_serviceDesc, srv)
}

func _Email_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Email/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailServer).Create(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _Email_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Email/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailServer).Update(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _Email_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Email/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailServer).Get(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _Email_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Email/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Email_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Email/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailServer).Send(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

var _Email_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Email",
	HandlerType: (*EmailServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Email_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Email_Update_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Email_Get_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _Email_Search_Handler,
		},
		{
			MethodName: "Send",
			Handler:    _Email_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "email.proto",
}

func init() { proto.RegisterFile("email.proto", fileDescriptor_email_473ab52288cf1a2d) }

var fileDescriptor_email_473ab52288cf1a2d = []byte{
	// 539 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xed, 0x6e, 0xd3, 0x40,
	0x10, 0x8c, 0xed, 0x7c, 0xae, 0xdb, 0x10, 0x56, 0x08, 0x9d, 0xca, 0x87, 0x82, 0xf9, 0x8a, 0x8a,
	0x54, 0x44, 0x10, 0xe2, 0x37, 0x75, 0x2a, 0x54, 0x89, 0x82, 0x74, 0x0e, 0x0f, 0xe0, 0xd8, 0x5b,
	0x6a, 0x94, 0x38, 0xc6, 0x77, 0x91, 0xe8, 0x6b, 0xf0, 0x50, 0xfc, 0xe6, 0x91, 0xd0, 0xde, 0x9d,
	0x9b, 0x94, 0x4a, 0xe5, 0xdf, 0xcd, 0xce, 0xf8, 0x72, 0x3b, 0x33, 0x0a, 0x84, 0xb4, 0x4a, 0x8b,
	0xe5, 0x51, 0x55, 0xaf, 0xf5, 0x1a, 0xfd, 0x6a, 0x11, 0xfd, 0x0a, 0xa0, 0x77, 0x46, 0x4a, 0xa5,
	0xdf, 0x08, 0x87, 0xe0, 0x9f, 0xce, 0x84, 0x37, 0xf6, 0x26, 0x81, 0xf4, 0x4f, 0x67, 0xf8, 0x0a,
	0x40, 0x52, 0x56, 0x54, 0x05, 0x95, 0x5a, 0x09, 0x7f, 0x1c, 0x4c, 0xc2, 0x69, 0x78, 0x54, 0x2d,
	0x8e, 0x3e, 0xe4, 0x79, 0x4d, 0x4a, 0xc9, 0x1d, 0x1a, 0x1f, 0x80, 0x1f, 0xc7, 0x22, 0xb8, 0x29,
	0xf2, 0xe3, 0x18, 0x1f, 0x41, 0x70, 0x1c, 0xc7, 0xa2, 0x7d, 0x93, 0xe5, 0x39, 0x3e, 0x85, 0x6e,
	0x42, 0x65, 0x4e, 0xb5, 0xe8, 0x8c, 0xbd, 0x7f, 0x15, 0x8e, 0x42, 0x01, 0xbd, 0x64, 0xb3, 0xf8,
	0x4e, 0x99, 0x16, 0xdd, 0xb1, 0x37, 0x19, 0xc8, 0x06, 0x22, 0x42, 0xfb, 0x78, 0x9d, 0x5f, 0x8a,
	0x9e, 0x19, 0x9b, 0x33, 0x4e, 0xa0, 0x7f, 0x56, 0xac, 0x68, 0x7e, 0x59, 0x91, 0xe8, 0x8f, 0xbd,
	0xc9, 0x70, 0xba, 0xc7, 0x97, 0x36, 0x33, 0x79, 0xc5, 0xe2, 0x4b, 0xe8, 0x26, 0x3a, 0xd5, 0x1b,
	0x25, 0x06, 0x46, 0x77, 0x87, 0x75, 0x27, 0x6c, 0x93, 0x1d, 0x4b, 0x47, 0xe3, 0x3d, 0xe8, 0x9c,
	0xd4, 0xf5, 0xba, 0x16, 0x60, 0x7e, 0xc7, 0x02, 0x7c, 0x08, 0x83, 0xd9, 0x3c, 0xae, 0x29, 0xd5,
	0x94, 0x8b, 0xd0, 0x78, 0xb7, 0x1d, 0x58, 0xf6, 0x6b, 0x95, 0x1b, 0x76, 0xaf, 0x61, 0xdd, 0x00,
	0xef, 0x43, 0x77, 0x36, 0x4f, 0xa8, 0xd4, 0x62, 0xdf, 0x50, 0x0e, 0x45, 0xbf, 0x3d, 0xd8, 0x4f,
	0x28, 0xad, 0xb3, 0x0b, 0x49, 0x3f, 0x36, 0xa4, 0x34, 0xdf, 0x73, 0xe5, 0xb5, 0x49, 0x68, 0x20,
	0xb7, 0x03, 0xbe, 0xc7, 0xf9, 0xe7, 0x1b, 0xaa, 0xb1, 0x6c, 0xbb, 0x5a, 0xf0, 0xdf, 0xd5, 0x92,
	0xa2, 0xcc, 0x48, 0xb4, 0xcd, 0x3b, 0x2c, 0x60, 0x5f, 0xe7, 0xc5, 0x72, 0x69, 0x42, 0x09, 0xa4,
	0x39, 0xb3, 0xf2, 0x53, 0xb1, 0x2a, 0x6c, 0x06, 0x81, 0xb4, 0x80, 0x1f, 0xf0, 0xe5, 0xfc, 0x5c,
	0x91, 0x36, 0x19, 0x04, 0xd2, 0xa1, 0xe8, 0x1d, 0x0c, 0x9b, 0x3d, 0x54, 0xb5, 0x2e, 0x15, 0x71,
	0xd4, 0xe6, 0x01, 0x4a, 0x78, 0xdb, 0x32, 0xb8, 0x02, 0x4a, 0x47, 0x45, 0xef, 0xa1, 0xe7, 0xd2,
	0xe7, 0x37, 0x7c, 0x4e, 0x57, 0xe4, 0x76, 0x36, 0x67, 0x6e, 0x82, 0xa3, 0xdd, 0xbe, 0x0d, 0x8c,
	0x5e, 0x00, 0xf0, 0xea, 0x92, 0xd4, 0x66, 0xa9, 0x6d, 0x63, 0xb2, 0x8c, 0x75, 0xfc, 0x79, 0x5f,
	0x36, 0xf0, 0xf0, 0xf1, 0xb6, 0x1d, 0xd8, 0x87, 0xb6, 0xa6, 0x9f, 0x7a, 0xd4, 0xe2, 0xd3, 0x85,
	0x5e, 0x2d, 0x47, 0xde, 0xe1, 0x6b, 0x08, 0x77, 0x6c, 0xc2, 0x10, 0x7a, 0x99, 0x0d, 0xd4, 0xaa,
	0x14, 0x95, 0x7a, 0xe4, 0xe1, 0x00, 0x3a, 0xc4, 0x1d, 0x18, 0xf9, 0xd3, 0x3f, 0x1e, 0x74, 0xcc,
	0x17, 0xf8, 0x0c, 0xba, 0x36, 0x7c, 0xdc, 0x5d, 0xed, 0x60, 0x17, 0x44, 0x2d, 0x56, 0xd9, 0x12,
	0xdc, 0xaa, 0x7a, 0x02, 0xc1, 0x47, 0xd2, 0xb7, 0x4a, 0xde, 0x70, 0xf4, 0xec, 0x30, 0xde, 0x65,
	0xe2, 0x5a, 0x6b, 0x0e, 0x70, 0x77, 0x64, 0x03, 0x88, 0x5a, 0xf8, 0x1c, 0xda, 0x6c, 0xd2, 0xf5,
	0x6b, 0x87, 0x56, 0xda, 0x78, 0x17, 0xb5, 0x16, 0x5d, 0xf3, 0x27, 0xf1, 0xf6, 0x6f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x0b, 0x61, 0xfc, 0x8a, 0x33, 0x04, 0x00, 0x00,
}
